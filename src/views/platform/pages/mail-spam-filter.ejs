<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>SG Platform</title>
    <link rel="shortcut icon" type="image/png" href="/platform/assets/images/logos/favicon.png" />
    <!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous"> -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

    <link rel="stylesheet" href="/platform/assets/css/styles.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="https://fonts.gstatic.com" rel="preconnect" />
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <%-include("../partials/preloader-css")%>
        <%-include("../partials/preloader-js")%>

</head>
<%- include("../partials/post-head") %>

<body>
<style>
    .grey-bg{ 
        background-color:rgb(234,239,243);
        padding: 30px;
        border-radius: 10px;
    }
    .form-check-input{
        background-color: white;
    }
    
</style>
<%- include("../partials/preloader") %>
<!-- Body Wrapper -->
<div class="page-wrapper" id="main-wrapper" data-layout="vertical" data-navbarbg="skin6" data-sidebartype="full"
    data-sidebar-position="fixed" data-header-position="fixed">
    <%- include("../partials/sidebar") %>
    <!-- Main wrapper -->
    <div class="body-wrapper">
        <%- include("../partials/header") %>
        
        <div class="container-fluid">
            <div class="container-fluid" style="padding-top: 40px;">
                <div class="card">
                    <div class="card-body">
                        <h2 class="fs-6 fw-semibold text-center mb-4">Mail Sieve</h2>
                        <p style="font-size: 10px;" class="fs-3 fw-semibold">
                            This is designed to help you declutter your gmail. Once you've entered your preferences, 
                            click 'Download File'. Now, navigate to your gmail. Go to 'Filters and Blocked Addresses' 
                            under settings. Then, select import filters, and choose the file you downloaded. 
                            Click 'create filters', and your gmail will be configured within a few minutes
                            (If you do not find your required email ID in the search bar, you can enter it yourself â€“ it works the same).
                            Don't worry, it's not as complicated as it sounds! <br>
                        </p>  
                        <form id="mailSpamFilterForm">
                            <!-- Categories Section -->
                            <div class="mb-4 grey-bg">
                                <h5>Categories</h5>
                                <p style="font-size: 10px;" class="fs-3 fw-semibold">
                                    Select categories that you wish to see as separate labels. For example, selecting 'Clubs' will create a label called 'Clubs' which contains all emails from Clubs at Ashoka only. <br>
                                </p>  
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" id="clubs" name="categories" value="Clubs">
                                    <label class="form-check-label" for="clubs">Clubs</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" id="societies" name="categories" value="Societies">
                                    <label class="form-check-label" for="societies">Societies</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" id="departments" name="categories" value="Departments">
                                    <label class="form-check-label" for="departments">Departments</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" id="offices" name="categories" value="Offices">
                                    <label class="form-check-label" for="offices">Offices</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" id="googleClassroom" name="categories" value="Google Classroom">
                                    <label class="form-check-label" for="googleClassroom">Google Classroom</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" id="sharedFiles" name="categories" value="Shared Files">
                                    <label class="form-check-label" for="sharedFiles">Shared Files</label>
                                </div>
                            </div>


                            <!-- Skip Primary Inbox Section -->
                            <div class="mb-4 grey-bg">
                              <h5>Skip Primary Inbox</h5>
                              <p style="font-size: 10px;" class="fs-3 fw-semibold">
                                Select email ID's that you do not want in your Primary Inbox. These will be visible under 'All Mail'. <br>
                              </p>  

                              <div class="container mt-3">
                                <ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
                                    <li class="nav-item" role="presentation">
                                       <button class="nav-link small-pills active" id="pills-instructions-tab" data-bs-toggle="pill" data-bs-target="#evaluations" type="button" role="tab" aria-controls="#evaluations" aria-selected="true">
                                          Clubs
                                       </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link small-pills" id="pills-1-tab" data-bs-toggle="pill" data-bs-target="#updateGrades" type="button" role="tab" aria-controls="#updateGrades" aria-selected="true">Societies</button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link small-pills" id="pills-12-tab" data-bs-toggle="pill" data-bs-target="#raiseGPASection" type="button" role="tab" aria-controls="#raiseGPASection" aria-selected="true">Departments</button>
                                    </li>
                                </ul>

                                <div class="tab-content">
                                    <div id="evaluations" class="tab-pane fade show active" aria-labelledby="evaluationTab">
                                        <div class="d-flex flex-wrap gap-2 my-3">
                                            <% data.filter((item) => item.Type === 'Club').forEach(item => { %>
                                                <button class="btn btn-sm btn-outline-primary pill-btn <%= selectedEmails.includes(item.Email) ? 'active' : '' %>" onclick="togglePill(event, '<%- item.Email %>')">
                                                    <%- item.Name_df %>
                                                </button>
                                            <% }); %>
                                        </div>
                                    </div>
                                    <div id="updateGrades" role="tabpanel" class="tab-pane fade">
                                        <div class="d-flex flex-wrap gap-2 my-3">
                                            <% data.filter((item) => item.Type === 'Society').forEach(item => { %>
                                                <button class="btn btn-sm btn-outline-primary pill-btn <%= selectedEmails.includes(item.Email) ? 'active' : '' %>" onclick="togglePill(event, '<%- item.Email %>')">
                                                    <%- item.Name_df %>
                                                </button>
                                            <% }); %>
                                        </div>
                                    </div>
                                    <div id="raiseGPASection" role="tabpanel" class="tab-pane fade" aria-labelledby="updateTab">
                                        <div class="d-flex flex-wrap gap-2 my-3">
                                            <% data.filter((item) => item.Type === 'Department').forEach(item => { %>
                                                <button class="btn btn-sm btn-outline-primary pill-btn <%= selectedEmails.includes(item.Email) ? 'active' : '' %>" onclick="togglePill(event, '<%- item.Email %>')">
                                                    <%- item.Name_df %>
                                                </button>
                                            <% }); %>
                                        </div>
                                    </div>
                                </div>
                              
                              <!-- <div>
                                <ul class="nav nav-pills" id="pills-tab" role="tablist">
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link small-pills active" id="pills-instructions-tab" data-bs-toggle="pill" data-bs-target="#clubs" type="button" role="tab" aria-controls="clubs" aria-selected="true">Clubs</button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link small-pills" id="pills-1-tab" data-bs-toggle="pill" data-bs-target="#societies" type="button" role="tab" aria-controls="societies" aria-selected="false">Societies</button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link small-pills" id="pills-12-tab" data-bs-toggle="pill" data-bs-target="#departments" type="button" role="tab" aria-controls="departments" aria-selected="false">Departments</button>
                                    </li>
                                </ul>
                                <div class="tab-content" id="pills-tabContent">
                                    <div class="tab-pane fade show active" id="clubs" role="tabpanel" aria-labelledby="clubTab">
                                        <div class="d-flex flex-wrap gap-2 my-3">
                                            <% data.filter((item) => item.Type === 'Club').forEach(item => { %>
                                                <button class="btn btn-sm btn-outline-primary pill-btn <%= selectedEmails.includes(item.Email) ? 'active' : '' %>" onclick="togglePill('<%- item.Email %>')">
                                                    <%- item.Name_df %>
                                                </button>
                                            <% }); %>
                                        </div>
                                    </div>
                                    <div class="tab-pane fade" id="societies" role="tabpanel" aria-labelledby="societyTab">
                                        <div class="d-flex flex-wrap gap-2 my-3">
                                            <% data.filter((item) => item.Type === 'Society').forEach(item => { %>
                                                <button class="btn btn-sm btn-outline-primary pill-btn <%= selectedEmails.includes(item.Email) ? 'active' : '' %>" onclick="togglePill('<%- item.Email %>')">
                                                    <%- item.Name_df %>
                                                </button>
                                            <% }); %>
                                        </div>
                                    </div>
                                    <div class="tab-pane fade" id="departments" role="tabpanel" aria-labelledby="departmentTab">
                                        <div class="d-flex flex-wrap gap-2 my-3">
                                            <% data.filter((item) => item.Type === 'Department').forEach(item => { %>
                                                <button class="btn btn-sm btn-outline-primary pill-btn <%= selectedEmails.includes(item.Email) ? 'active' : '' %>" onclick="togglePill('<%- item.Email %>')">
                                                    <%- item.Name_df %>
                                                </button>
                                            <% }); %>
                                        </div>
                                    </div>
                                </div>
                            </div> -->
                              

                            </div>



                            <!-- Custom Labels Section -->
                            <div class="mb-4 grey-bg">
                                <h5>Custom Labels</h5>
                                <p style="font-size: 10px;" class="fs-3 fw-semibold">
                                    You can create your custom labels. Click Add Label for more information. <br>
                                </p>  
                                <button type="button" class="btn btn-primary mb-2" id="addLabelModalBtn" data-bs-toggle="modal" data-bs-target="#addLabelModal">Add Label</button>
                                <div id="customLabels"></div>
                            </div>

                            <!-- Download Button -->
                            <div class="text-center">
                                <button type="button" class="btn btn-success" id="downloadXmlBtn">Download File</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div> 
        </div>

        <!-- Add Label Modal -->
        <div class="modal fade" id="addLabelModal" tabindex="-1" aria-labelledby="addLabelModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addLabelModalLabel">Add Custom Label</h5> 
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="newLabelForm">
                            <div class="mb-3">
                                <label for="labelName" class="form-label">Label Name</label>
                                <input type="text" class="form-control" id="labelName" placeholder="This is the name of the new category of emails you are creating." required>
                            </div>
                            <div class="mb-3">
                                <label for="labelEmails" class="form-label">Email(s)</label>
                                <p style="font-size: 10px;" class="fs-3 fw-semibold">
                                    Select any email IDs whose emails you wish to see under this category. For example, if I'm making a label for History, I can add my History professors, the History representatives and the History society.
                                </p> 
                                <div class="input-group">
                                  <input list="labelsList" id="labelEmails" class="form-control" placeholder="Search and select emails..." />
                                  <button type="button" class="btn btn-outline-primary" id="addLabelBtn">+</button>
                                </div>
                                <datalist id="labelsList">
                                  <!-- Options will be populated by JavaScript -->
                              </datalist>
                              <div id="selectedLabels" class="mt-2"></div>
                            </div>
                            <div class="mb-3">
                                <label for="labelKeywords" class="form-label">Keywords</label>
                                <p style="font-size: 10px;" class="fs-3 fw-semibold">
                                    Emails containing any of the words entered below will be categorised under this label. 
                                </p> 
                                <div class="input-group">
                                    <input type="text" class="form-control" id="labelKeywords" placeholder="Add keywords...">
                                    <button type="button" class="btn btn-outline-primary" id="addKeywordBtn">+</button>
                                </div>
                                <div id="selectedKeywords" class="mt-2"></div>
                            </div>
                            <button type="button" class="btn btn-primary" id="saveLabelBtn">Save Label</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <%- include("../partials/preloader-js") %>
        
        <script src="/platform/assets/libs/jquery/dist/jquery.min.js"></script>
        <script src="/platform/assets/libs/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
        <script src="/platform/assets/js/sidebarmenu.js"></script>
        <script src="/platform/assets/js/app.min.js"></script>
        <script src="/platform/assets/libs/apexcharts/dist/apexcharts.min.js"></script>
        <script src="/platform/assets/libs/simplebar/dist/simplebar.js"></script>
        <script src="/platform/assets/js/dashboard.js"></script>
        <script src="/platform/assets/js/theme.js"></script>
        <script src="/platform/assets/js/main.js"></script>
        <!-- <script src="https://code.jquery.com/jquery-3.7.0.js"></script> -->
        <!-- <script src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap4.min.js"></script> -->
        <!-- <%-include("../partials/preloader-js")%> -->

        

        <script>
            let selectedEmails = []; // Initialize the selectedEmails array.

            function togglePill(event, email) {
                event.preventDefault();

                // Toggle the email in selectedEmails array
                const index = selectedEmails.findIndex(e => e === email);
                if (index === -1) {
                    // Email not in the array, add it
                    selectedEmails.push(email);
                } else {
                    // Email is in the array, remove it
                    selectedEmails.splice(index, 1);
                }

                console.log(selectedEmails);

                // Update the button classes to reflect active state based on selectedEmails
                document.querySelectorAll('.pill-btn').forEach(button => {
                    const buttonEmail = button.getAttribute('onclick').match(/'([^']+)'/)[1];
                    if (selectedEmails.some(e => e === buttonEmail)) {
                        button.classList.add('active');
                    } else {
                        button.classList.remove('active');
                    }
                });
            }

        </script>
        
        <script>
            const clubsCheckbox = document.getElementById('clubs');
            const societiesCheckbox = document.getElementById('societies');
            const departmentsCheckbox = document.getElementById('departments');
            const officesCheckbox = document.getElementById('offices');
            const googleClassroomCheckbox = document.getElementById('googleClassroom');
            const sharedFilesCheckbox = document.getElementById('sharedFiles');
            var customLabels = []

            var emails_json = [
    {
        "Unnamed: 0": 1,
        "Name_df": " Anime Club",
        "Email": "anime@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 2,
        "Name_df": "Abhinaya",
        "Email": "dancesociety@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 3,
        "Name_df": "Ashoka Business Club",
        "Email": "businessclub@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 4,
        "Name_df": "Ashoka Consulting  Club",
        "Email": "consulting@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 5,
        "Name_df": "Ashoka Debating Union",
        "Email": "debating@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 6,
        "Name_df": "Ashoka Investments Club",
        "Email": "investmentsclub@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 7,
        "Name_df": "Ashoka MUN Club",
        "Email": "ashoka.mun@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 8,
        "Name_df": "Ashoka Marketing Club",
        "Email": "marketingclub@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 9,
        "Name_df": "Ashoka University International Students Association (AUISA)",
        "Email": "aia@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 10,
        "Name_df": "Ashoka Women in Business and Leadership",
        "Email": "awibnl@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 11,
        "Name_df": "Clad - fashion club",
        "Email": "clad@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 12,
        "Name_df": "Cycling Club",
        "Email": "ashokacyclingclub@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 13,
        "Name_df": "Eeshto",
        "Email": "eeshto@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 14,
        "Name_df": "Enactus",
        "Email": "enactus@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 15,
        "Name_df": "Entrepreneurship Club",
        "Email": "elcub@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 16,
        "Name_df": "FarmFresh",
        "Email": "farmfresh@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 17,
        "Name_df": "Hallyu",
        "Email": "hallyu@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 18,
        "Name_df": "Her Campus Ashoka",
        "Email": "hcashoka@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 19,
        "Name_df": "Hindvi",
        "Email": "hindiurdu@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 20,
        "Name_df": "Kalinga",
        "Email": "kalinga@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 21,
        "Name_df": "Khayal",
        "Email": "filmmakingclub@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 22,
        "Name_df": "Lang-up",
        "Email": "langup@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 23,
        "Name_df": "Mad Batter",
        "Email": "madbatter@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 24,
        "Name_df": "Navrang",
        "Email": "filmsoc@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 25,
        "Name_df": "Neev: The Community Engagement Club",
        "Email": "neev@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 26,
        "Name_df": "Orators' Club",
        "Email": "orators@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 27,
        "Name_df": "Pawsitive",
        "Email": "pawsitive@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 28,
        "Name_df": "Quizzing club (Chakraview)",
        "Email": "quizzing@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 29,
        "Name_df": "Red Brick Words",
        "Email": "poetry@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 30,
        "Name_df": "Rotaract Club",
        "Email": "rotaract@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 31,
        "Name_df": "Ruhi",
        "Email": "ruhi@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 32,
        "Name_df": "Sports Enthusiast Club",
        "Email": "sec@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 33,
        "Name_df": "SOBAC",
        "Email": "sobac@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 34,
        "Name_df": "The Comic Relief",
        "Email": "thecomicrelief@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 35,
        "Name_df": "The Green Room",
        "Email": "theatresociety@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 36,
        "Name_df": "Vistaar",
        "Email": "vistaar@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 37,
        "Name_df": "Ashoka Tech Consulting Club",
        "Email": "consulting@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 38,
        "Name_df": "Ashoka Fintech Club",
        "Email": "ashoka.mun@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 39,
        "Name_df": "Ashoka Heath Research Club",
        "Email": "ahrc@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 40,
        "Name_df": "Ashoka Cycling Club",
        "Email": "ashokacyclingclub@ashoka.edu.in",
        "Type": "Club"
    },
    {
        "Unnamed: 0": 41,
        "Name_df": "Career Prep program",
        "Email": "careerpre.cdo@ashoka.edu.in",
        "Type": "Miscellaneous"
    },
    {
        "Unnamed: 0": 42,
        "Name_df": "Global Education",
        "Email": "globaleducation@ashoka.edu.in",
        "Type": "Miscellaneous"
    },
    {
        "Unnamed: 0": 43,
        "Name_df": "Ashoka Students Behavioural Insights Team",
        "Email": "abit@ashoka.edu.in",
        "Type": "Miscellaneous"
    },
    {
        "Unnamed: 0": 44,
        "Name_df": "Ashoka Basketball Association",
        "Email": "aba@ashoka.edu.in",
        "Type": "Miscellaneous"
    },
    {
        "Unnamed: 0": 45,
        "Name_df": "Coffee and More",
        "Email": "coffee.more@ashoka.edu.in",
        "Type": "Miscellaneous"
    },
    {
        "Unnamed: 0": 46,
        "Name_df": "Infirmary",
        "Email": "infirmary@ashoka.edu.in",
        "Type": "Miscellaneous"
    },
    {
        "Unnamed: 0": 47,
        "Name_df": "Election Commission",
        "Email": "auec@ashoka.edu.in",
        "Type": "Miscellaneous"
    },
    {
        "Unnamed: 0": 48,
        "Name_df": "Events & Invitations",
        "Email": "events@ashoka.edu.in",
        "Type": "Miscellaneous"
    },
    {
        "Unnamed: 0": 49,
        "Name_df": "Ashoka Internship",
        "Email": "internships@ashoka.edu.in",
        "Type": "Miscellaneous"
    },
    {
        "Unnamed: 0": 50,
        "Name_df": "Fundraisers",
        "Email": "fundraising-ashoka@ashoka.edu.in",
        "Type": "Miscellaneous"
    },
    {
        "Unnamed: 0": 51,
        "Name_df": "Surveys",
        "Email": "survey@ashoka.edu.in",
        "Type": "Miscellaneous"
    },
    {
        "Unnamed: 0": 52,
        "Name_df": "Internship cell",
        "Email": "internshipcell@ashoka.edu.in",
        "Type": "Miscellaneous"
    },
    {
        "Unnamed: 0": 53,
        "Name_df": "Ashoka University Society for Sustainable Development Goals",
        "Email": "ausdg@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 54,
        "Name_df": "Caperture: The Photography Society",
        "Email": "caperture@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 55,
        "Name_df": "Ashoka Data Society (ADS) ",
        "Email": "ads@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 56,
        "Name_df": "Epigraph: The Literary society",
        "Email": "litsoc@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 57,
        "Name_df": "PhySoc",
        "Email": "physoc@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 58,
        "Name_df": "Philosophy Society",
        "Email": "philsoc@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 59,
        "Name_df": "Psychology Society ",
        "Email": "psychology.society@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 60,
        "Name_df": "Ashoka University Economics Society",
        "Email": "econsoc@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 61,
        "Name_df": "Ashoka Society for India Studies",
        "Email": "asis@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 62,
        "Name_df": "Women in Computing Society (WiCS)",
        "Email": "wics@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 63,
        "Name_df": "Ashoka Political Science Society ",
        "Email": "polsoc@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 64,
        "Name_df": "The Computer Science Society (CS Soc)",
        "Email": "cs.society@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 65,
        "Name_df": "Ashoka Public Policy Society (APPS)",
        "Email": "publicpolsoc@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 66,
        "Name_df": "IEEE Ashoka Student Branch",
        "Email": "ieee.asb@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 67,
        "Name_df": "War Studies Society ",
        "Email": "warsoc@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 68,
        "Name_df": "Astronomy Society",
        "Email": "astronomysociety@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 69,
        "Name_df": "Ashoka Law Society ",
        "Email": "law@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 70,
        "Name_df": "AMFACS",
        "Email": "amfacs@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 71,
        "Name_df": "Mathematics Society",
        "Email": "math.society@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 72,
        "Name_df": "Biology Society ",
        "Email": "biosoc@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 73,
        "Name_df": "Ashoka Society for International Trade and Foreign Policy (ASITFP)",
        "Email": "asitfp@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 74,
        "Name_df": "Ashoka Women In Finance Society",
        "Email": "womeninfinance@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 75,
        "Name_df": "The Ashoka Journal of Biosciences",
        "Email": "biojournal@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 76,
        "Name_df": "Ashoka Climate Change and Environmental Studies Society (ACCESS)",
        "Email": "evs.soc@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 77,
        "Name_df": "Chemistry Society",
        "Email": "chemsoc@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 78,
        "Name_df": "Untitled: The Visual Arts Society",
        "Email": "untitled.visualarts@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 79,
        "Name_df": "Art Society",
        "Email": "art.society@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 80,
        "Name_df": "Edict",
        "Email": "edict@ashoka.edu.in",
        "Type": "Society"
    },
    {
        "Unnamed: 0": 81,
        "Name_df": "Physics",
        "Email": "physics.dept@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 82,
        "Name_df": "Chemistry",
        "Email": "chemistry@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 83,
        "Name_df": "Biology",
        "Email": "biology@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 84,
        "Name_df": "History",
        "Email": "history@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 85,
        "Name_df": "IR",
        "Email": "irevents@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 86,
        "Name_df": "Pol Science",
        "Email": "polevents@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 87,
        "Name_df": "Entrepreneurship",
        "Email": "entrepreneurship@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 88,
        "Name_df": "English",
        "Email": "englishandcreativewriting@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 89,
        "Name_df": "Media Studies",
        "Email": "media.studies@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 90,
        "Name_df": "CW",
        "Email": "creativewritingstudents@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 91,
        "Name_df": "Economics",
        "Email": "economics@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 92,
        "Name_df": "Philosophy",
        "Email": "philosophy@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 93,
        "Name_df": "Mathematics",
        "Email": "math@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 94,
        "Name_df": "Psychology",
        "Email": "psychology.dept@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 95,
        "Name_df": "EVS",
        "Email": "environmentstudies@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 96,
        "Name_df": "Socio Anthro",
        "Email": "soa@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 97,
        "Name_df": "Performing Arts",
        "Email": "performingarts@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 98,
        "Name_df": "Visual Arts",
        "Email": "visualarts@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 99,
        "Name_df": "Computer Science",
        "Email": "cs.dept@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 100,
        "Name_df": "English and creative writing ",
        "Email": "englishandcwdepartment@ashoka.edu.in",
        "Type": "Department"
    },
    {
        "Unnamed: 0": 101,
        "Name_df": "Centre for Climate change and sustainability",
        "Email": "3cs@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 102,
        "Name_df": "Centre for Social Impact and Philantrophy",
        "Email": "connect.csip@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 103,
        "Name_df": "Ashoka Centre for Well-Being",
        "Email": "well.being@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 104,
        "Name_df": "Ashoka centre for Translation",
        "Email": "translation@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 105,
        "Name_df": "Centre for Analysis of Network Data and Insight Derivation",
        "Email": "candid@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 106,
        "Name_df": "Center for China Studies",
        "Email": "chinastudies@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 107,
        "Name_df": "Centre for Studies in Gender and Sexuality",
        "Email": "csgs@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 108,
        "Name_df": "Center for Entrepreneurship",
        "Email": "entrepreneurship@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 109,
        "Name_df": "Center for Digitisation, AI and Society",
        "Email": "digisoc@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 110,
        "Name_df": "Ashoka Centre for a People-centric Energy Transition",
        "Email": "contact@acpet.ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 111,
        "Name_df": "Centre for Economic Data and Analysis",
        "Email": "ceda@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 112,
        "Name_df": "Centre for Interdisciplinary Archaeological Research",
        "Email": "ciar@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 113,
        "Name_df": "Centre for Social and Behaviour Change",
        "Email": "careersatcsbc@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 114,
        "Name_df": "Koita Centre for Digital Health at Ashoka",
        "Email": "kcdh-a@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 115,
        "Name_df": "The Centre for the Creative and the Critical",
        "Email": "ccc@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 116,
        "Name_df": "Isaac Centre for Public Policy",
        "Email": "icpp@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 117,
        "Name_df": "Trivedi Centre for Political Data",
        "Email": "tcpd-contact@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 118,
        "Name_df": "Centre for Health Analytics Research and Trends",
        "Email": "chart_tsb@ashoka.edu.in",
        "Type": "Centres"
    },
    {
        "Unnamed: 0": 119,
        "Name_df": "Ashoka University Queer Collective (AUQC )",
        "Email": "auqc@ashoka.edu.in",
        "Type": "Collective"
    },
    {
        "Unnamed: 0": 120,
        "Name_df": "Ashoka University Queer Collective (AUQC )",
        "Email": "vichitra@ashoka.edu.in",
        "Type": "Collective"
    },
    {
        "Unnamed: 0": 121,
        "Name_df": "The Feminist Collective",
        "Email": "feministcollective@ashoka.edu.in",
        "Type": "Collective"
    },
    {
        "Unnamed: 0": 122,
        "Name_df": "The Northeast Collective",
        "Email": "northeastcollective@ashoka.edu.in",
        "Type": "Collective"
    },
    {
        "Unnamed: 0": 123,
        "Name_df": "Art and Design Collective",
        "Email": "adc@ashoka.edu.in",
        "Type": "Collective"
    },
    {
        "Unnamed: 0": 124,
        "Name_df": "Office of academic affairs ",
        "Email": "oaa@ashoka.edu.in",
        "Type": "Offices"
    },
    {
        "Unnamed: 0": 125,
        "Name_df": "Office of student affairs",
        "Email": "studentaffairs@ashoka.edu.in",
        "Type": "Offices"
    },
    {
        "Unnamed: 0": 126,
        "Name_df": "Office of Sustainability",
        "Email": "sustainability@ashoka.edu.in",
        "Type": "Offices"
    },
    {
        "Unnamed: 0": 127,
        "Name_df": "Office of Post Graduate Studies",
        "Email": "connect.postgraduate@ashoka.edu.in",
        "Type": "Offices"
    },
    {
        "Unnamed: 0": 128,
        "Name_df": "Office of Learning Support",
        "Email": "ols@ashoka.edu.in",
        "Type": "Offices"
    },
    {
        "Unnamed: 0": 129,
        "Name_df": "Career Development Office",
        "Email": "cdo@ashoka.edu.in",
        "Type": "Offices"
    },
    {
        "Unnamed: 0": 130,
        "Name_df": "Dining Ashoka",
        "Email": "dining@ashoka.edu.in",
        "Type": "Offices"
    },
    {
        "Unnamed: 0": 131,
        "Name_df": "Student Life",
        "Email": "life@ashoka.edu.in",
        "Type": "Offices"
    },
    {
        "Unnamed: 0": 132,
        "Name_df": "IT Helpdesk",
        "Email": "it.helpdesk@ashoka.edu.in",
        "Type": "Helpdesk"
    },
    {
        "Unnamed: 0": 133,
        "Name_df": "Philosophy HelpDesk",
        "Email": "philhelpdesk@ashoka.edu.in",
        "Type": "Helpdesk"
    },
    {
        "Unnamed: 0": 134,
        "Name_df": "Maths Helpdesk",
        "Email": "maths.helpdesk@ashoka.edu.in",
        "Type": "Helpdesk"
    },
    {
        "Unnamed: 0": 135,
        "Name_df": "Cultural Ministry",
        "Email": "culturalministry@ashoka.edu.in",
        "Type": "Student Government"
    },
    {
        "Unnamed: 0": 136,
        "Name_df": "Ministry of Technology",
        "Email": "technology.ministry@ashoka.edu.in",
        "Type": "Student Government"
    },
    {
        "Unnamed: 0": 137,
        "Name_df": "Ministry of Community & Well Being",
        "Email": "well.being@ashoka.edu.in",
        "Type": "Student Government"
    },
    {
        "Unnamed: 0": 138,
        "Name_df": "Ministry of Academic Affairs",
        "Email": "academicaffairs.ministry@ashoka.edu.in",
        "Type": "Student Government"
    },
    {
        "Unnamed: 0": 139,
        "Name_df": "Sports Ministry",
        "Email": "sports.ministry@ashoka.edu.in",
        "Type": "Student Government"
    },
    {
        "Unnamed: 0": 140,
        "Name_df": "Campus Life Ministry",
        "Email": "campus.life@ashoka.edu.in",
        "Type": "Student Government"
    },
    {
        "Unnamed: 0": 141,
        "Name_df": "Environment Ministry",
        "Email": "environmentministry@ashoka.edu.in",
        "Type": "Student Government"
    },
    {
        "Unnamed: 0": 142,
        "Name_df": "Student Government",
        "Email": "sg@ashoka.edu.in",
        "Type": "Student Government"
    },
    {
        "Unnamed: 0": 143,
        "Name_df": "Agneepath - Sports Fest",
        "Email": "agneepath@ashoka.edu.in",
        "Type": "Fest"
    },
    {
        "Unnamed: 0": 144,
        "Name_df": "Ent Weekender",
        "Email": "ent.weekender@ashoka.edu.in",
        "Type": "Fest"
    },
    {
        "Unnamed: 0": 145,
        "Name_df": "Banjara",
        "Email": "fest@ashoka.edu.in",
        "Type": "Fest"
    },
    {
        "Unnamed: 0": 146,
        "Name_df": "Ashoka Literature Festival",
        "Email": "litfest@ashoka.edu.in",
        "Type": "Fest"
    },
    {
        "Unnamed: 0": 147,
        "Name_df": "Ashoka Science Research Festival",
        "Email": "asrf@ashoka.edu.in",
        "Type": "Fest"
    },
    {
        "Unnamed: 0": 148,
        "Name_df": "Chakraview: The quizzing fest",
        "Email": "chakraview@ashoka.edu.in",
        "Type": "Fest"
    },
    {
        "Unnamed: 0": 149,
        "Name_df": "Psychology Representative ",
        "Email": "psy.rep@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 150,
        "Name_df": "Sociology and Anthropology Representative",
        "Email": "soa.rep@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 151,
        "Name_df": "English Representative",
        "Email": "english.rep@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 152,
        "Name_df": "Creative Representative",
        "Email": "creativewriting.rep@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 153,
        "Name_df": "Philosophy Representative",
        "Email": "philosophy.studentrep@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 154,
        "Name_df": "Computer Science Representative ",
        "Email": "cs.rep@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 155,
        "Name_df": "Biology representative",
        "Email": "biology_ugrep@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 156,
        "Name_df": "IR Representative",
        "Email": "ir.rep@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 157,
        "Name_df": "EVS Representative ",
        "Email": "evs.rep@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 158,
        "Name_df": "Physics Representative",
        "Email": "phys.rep@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 159,
        "Name_df": "Chemistry Representative",
        "Email": "chem.rep@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 160,
        "Name_df": "PPE Representative",
        "Email": "ppe.rep@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 161,
        "Name_df": "History Representative",
        "Email": "historyrepresentatives@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 162,
        "Name_df": "Economics Representative",
        "Email": "econreps@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 163,
        "Name_df": "Media Studies Representative",
        "Email": "ms.rep@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 164,
        "Name_df": " Visual arts representative",
        "Email": "studentrepresentative.visualarts@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 165,
        "Name_df": "Political Science Representative",
        "Email": "polsci.rep@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 166,
        "Name_df": "Mathematics Representative",
        "Email": "math.rep@ashoka.edu.in",
        "Type": "Representatives"
    },
    {
        "Unnamed: 0": 167,
        "Name_df": "English Colloquium",
        "Email": "english.colloquium@ashoka.edu.in",
        "Type": "Colloquium"
    },
    {
        "Unnamed: 0": 168,
        "Name_df": "History Colloquium",
        "Email": "historycolloquium@ashoka.edu.in",
        "Type": "Colloquium"
    },
    {
        "Unnamed: 0": 169,
        "Name_df": "Creative Writing Workshop",
        "Email": "creativewriting.workshop@ashoka.edu.in",
        "Type": "Workshop"
    }
]
            // Populate the datalist with emails
            // document.addEventListener("DOMContentLoaded", function() {
            //     const datalist = document.getElementById("emailsList");
            //     emails_json.forEach(emailObj => {
            //         const email = emailObj.Email;
            //         const option = document.createElement("option");
            //         option.value = email;
            //         datalist.appendChild(option);
            //     });
            // });

            // document.addEventListener("DOMContentLoaded", function() {
            //     const datalist = document.getElementById("labelsList");
            //     emails_json.forEach(emailObj => {
            //         const email = emailObj.Email;
            //         const option = document.createElement("option");
            //         option.value = email;
            //         datalist.appendChild(option);
            //     });
            // });

            // Trigger displaying email in 'Skip Primary Inbox' when pressing "Enter"
            // document.getElementById("skipPrimaryInbox").addEventListener("keypress", function(event) {
            //     if (event.key === "Enter") {
            //         event.preventDefault();  // Prevent form submission
            //         document.getElementById("addEmailSkipBtn").click();
            //     }
            // });

            // Trigger displaying email in 'Custom Labels' when pressing "Enter"
            document.getElementById("labelEmails").addEventListener("keypress", function(event) {
                if (event.key === "Enter") {
                    event.preventDefault();  // Prevent form submission
                    document.getElementById("addLabelBtn").click();
                }
            });


            // Handle adding selected email to the list
            // document.getElementById("addEmailSkipBtn").addEventListener("click", function() {
            //     const emailInput = document.getElementById("skipPrimaryInbox");
            //     const email = emailInput.value;
            //     if (email) {
            //         document.getElementById("selectedEmails").insertAdjacentHTML(
            //             "beforeend",
            //             `<span class="badge bg-primary me-2 selected-email">${email} <span class="close" onclick="removeItem(this)">&times;</span></span>`
            //         );
            //         emailInput.value = ""; // Clear input after selection
            //     }
            // });

            // Handle adding selected email to the list
            document.getElementById("addLabelBtn").addEventListener("click", function() {
                const emailInput = document.getElementById("labelEmails");
                const email = emailInput.value;
                
                if (email) {
                    document.getElementById("selectedLabels").insertAdjacentHTML(
                        "beforeend",
                        `<span class="badge bg-primary me-2 selected-email">${email} <span class="close" onclick="removeItem(this)">&times;</span></span>`
                    );
                    emailInput.value = ""; // Clear input after selection
                }
            });

            // Function to remove an email from the selected list
            function removeItem(element) {
                element.parentNode.remove();
            }

            // Handle Custom Label Keywords Selection
            $('#addKeywordBtn').on('click', function () {
                var keyword = $('#labelKeywords').val();
                if (keyword) {
                    $('#selectedKeywords').append('<span class="badge bg-primary me-2 selected-keyword">' + keyword + ' <span class="close" onclick="removeItem(this)">&times;</span></span>');
                    $('#labelKeywords').val('');
                }
            });

            // Remove item from selection (email/keyword)
            function removeItem(element) {
                $(element).parent().remove();
            }

            // Handle Save Label Button
            $('#saveLabelBtn').on('click', function () {

            // Get values from input fields
            var labelName = $('#labelName').val();

            // Remove the 'x' and split emails into an array
            var emailsText = $('#selectedLabels').text();
            var emailsArray = emailsText.replace(/ Ã—/g, ',').split(',');
            var emailValues = emailsArray.join(', ');
            emailsArray = emailsArray.slice(0, -1);

            // Remove the 'x' and split keywords into an array
            var keywordsText = $('#selectedKeywords').text();
            var keywordsArray = keywordsText.replace(/ Ã—/g, ',').split(',');
            keywordsArray = keywordsArray.slice(0, -1);

            // Check if label name is empty or both email and keyword inputs are empty
            if (labelName === '' || (emailsArray.length === 0 && keywordsArray.length === 0)) {
                alert("Cannot create an empty label.");
                return;  // Prevent further execution of the function
            }

            // Add custom label data to the array
            customLabels.push({name: labelName, keywords: keywordsArray, emails: emailsArray});
            console.log(customLabels);

            // Create the label HTML with cleaned data
            var labelHtml = '<div class="alert alert-info mt-2">Label Name:&nbsp;' + labelName + 
                            '<br />Emails: ' + emailValues + 
                            '<br />Keywords: ' + keywordsArray.join(',') + '</div>';

            // Append the label to the customLabels div
            $('#customLabels').append(labelHtml);

            // Hide the modal
            $('#addLabelModal').modal('hide');

            // Clear all inputs in the modal
            $('#labelName').val('');
            $('#selectedLabels').text('');
            $('#selectedKeywords').text('');

            });

            // Disable Save Button initially
            $('#saveLabelBtn').prop('disabled', true);

            // Monitor input changes and enable/disable button accordingly
            $('#labelName, #selectedLabels, #selectedKeywords').on('input', function () {
                var labelName = $('#labelName').val();
                var emailsText = $('#selectedLabels').text();
                var emailsArray = emailsText.replace(/ Ã—/g, ',').split(',');
                var keywordsText = $('#selectedKeywords').text();
                var keywordsArray = keywordsText.replace(/ Ã—/g, ',').split(',');

                // Enable Save Button if inputs are valid
                if (labelName !== '' && (emailsArray.length > 0 || keywordsArray.length > 0)) {
                    $('#saveLabelBtn').prop('disabled', false);
                } else {
                    $('#saveLabelBtn').prop('disabled', true);
                }
            });


            // Function to collect data and generate XML
            function generateAndDownloadXML() {
                
              

                // Collect skipped emails
                const skippedEmails = Array.from(document.querySelectorAll('#selectedEmails .selected-email')).map(el => el.textContent.trim());                

                // Generate XML content
                let xmlContent = '<?xml version="1.0" encoding="UTF-8"?>\n<feed xmlns="http://www.w3.org/2005/Atom" xmlns:apps="http://schemas.google.com/apps/2006">\n';

                // Add XML entries for skipped emails
                skippedEmails.forEach(email => {
                    xmlContent += `  <entry>\n    <category term="filter"/>\n    <title>Mail Filter</title>\n    <apps:property name="from" value="${email}"/>\n    <apps:property name="shouldArchive" value="true"/>\n      </entry>\n`;
                });//<apps:property name="label" value="Spam"/>\n

                // Add XML entries for custom labels
                customLabels.forEach(label => {
                    // Create filters for each email associated with the label
                    label.emails.forEach(email => {
                        xmlContent += `  <entry>\n    <category term="filter"/>\n    <title>${label.name} Filter</title>\n    <apps:property name="from" value="${email}"/>\n    <apps:property name="label" value="${label.name}"/>\n     </entry>\n`;// <apps:property name="shouldArchive" value="true"/>\n
                    });
                    // Create filters for each keyword associated with the label
                    label.keywords.forEach(keyword => {
                        xmlContent += `  <entry>\n    <category term="filter"/>\n    <title>${label.name} Keyword Filter</title>\n    <apps:property name="hasTheWord" value="${keyword}"/>\n    <apps:property name="label" value="${label.name}"/>\n    </entry>\n`;// <apps:property name="shouldArchive" value="true"/>\n
                    });
                });

                // Google Classroom and Shared Files filters
                if (googleClassroomCheckbox.checked) {
                  xmlContent += `<entry><category term='filter'></category><apps:property name='from' value='no-reply@classroom.google.com'/><apps:property name='label' value='Google Classroom'/></entry>\n`;
                }
                if (sharedFilesCheckbox.checked) {
                  xmlContent += `<entry><category term='filter'></category><apps:property name='from' value='drive-shares-dm-noreply@google.com'/><apps:property name='label' value='Shared Drives'/></entry>\n`;
                }

                const categories = [
                  { checkbox: clubsCheckbox, type: 'Club', label: 'Clubs' },
                  { checkbox: societiesCheckbox, type: 'Society', label: 'Societies' },                  
                  { checkbox: departmentsCheckbox, type: 'Department', label: 'Departments' },
                  { checkbox: officesCheckbox, type: 'Offices', label: 'Offices' },
                ];

                categories.forEach(category => {
                  if (category.checkbox.checked) {
                    const categoryEmails = emails_json.filter(item => item.Type && item.Type.trim() === category.type).map(item => item.Email);

                    // Create individual XML entries for each email
                    categoryEmails.forEach(email => {
                      xmlContent += `<entry><category term='filter'></category><apps:property name='from' value='${email}'/><apps:property name='label' value='${category.label}'/></entry>\n`;
                    });
                  }
                });

                // Close XML feed
                xmlContent += '</feed>';

                // Create and download the XML file
                const blob = new Blob([xmlContent], { type: 'application/xml' });
                const url = URL.createObjectURL(blob);
                const downloadLink = document.createElement('a');
                downloadLink.href = url;
                downloadLink.download = 'mailFilters_by_MinistryOfTechnology.xml';
                downloadLink.click();
                URL.revokeObjectURL(url);  // Clean up the URL object
            }

                // Enable/disable Download button based on input fields
                function toggleDownloadButton() {
                    const isAnyFieldFilled = 
                        document.querySelectorAll('#selectedEmails .selected-email').length > 0 || 
                        customLabels.length > 0 || 
                        clubsCheckbox.checked || 
                        societiesCheckbox.checked || 
                        departmentsCheckbox.checked || 
                        officesCheckbox.checked || 
                        googleClassroomCheckbox.checked || 
                        sharedFilesCheckbox.checked;

                    document.getElementById('downloadXmlBtn').disabled = !isAnyFieldFilled;
            }

                // Attach the toggleDownloadButton function to each input element
                document.querySelectorAll('input[type="checkbox"], #skipPrimaryInbox, #labelEmails, #labelKeywords').forEach(element => {
                    element.addEventListener('change', toggleDownloadButton);
                });
                document.getElementById("addEmailSkipBtn").addEventListener("click", toggleDownloadButton);
                document.getElementById("addLabelBtn").addEventListener("click", toggleDownloadButton);
                document.getElementById("saveLabelBtn").addEventListener("click", toggleDownloadButton);

                // Initial call to set the button's state on page load
                toggleDownloadButton();

                document.getElementById('downloadXmlBtn').addEventListener('click', generateAndDownloadXML);

        </script>
    </div>
</div>
</body>

</html>
